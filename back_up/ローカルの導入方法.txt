#contents

*概要
ローカル環境(AUTOMATIC1111版Stable Diffusion WebUI)の導入ガイドです。
''&color(#FF0000){注意} Stable Diffusion WEBUI AUTOMATIC1111はアップデート頻度が非常に高く、新機能の実装や仕様変更が頻繁に行われる為、Wikiの更新が追いついていません。''


*導入

- &size(15){[[画像付きガイドpdfを作りました。>>https://image01.seesaawiki.jp/n/h/nai_ch/Bh8T7jBTQz.C.pdf]](Windows用)}
※NovelAIの再現をしないなら「NAIモデルのダウンロードと配置」の項目は飛ばしてOK

- リファレンス
-- https://rentry.org/voldy

- 説明読んでも全く理解できない人は「簡易インストール」を試すといいかも。

** 1. Python 3.10をインストールする
[[https://www.python.org/ftp/python/3.10.10/python-3.10.10-amd64.exe]]
&color(#ff0000){3.11は入れても動かんから入れるな!!!}

「python-3.10.x-amd64.exe」がダウンロードされるので、ダブルクリックで開く。
このとき、Add to PATH にチェックをつけてインストールすること。
&ref(https://image02.seesaawiki.jp/n/h/nai_ch/H089Tt3hem.png)

&color(#ff0000){インストール終わったらPC再起動、絶対に!!}

** 2. Gitをインストールする

入れておかないと色々エラーが出たりして厄介。

[[https://git-scm.com/downloads]]
64-bit Git for Windows Setup. を選ぶ。

インストールするときは、「Windowsエクスプローラの統合 - Git Bash」のチェックボックスをオンにするのがおすすめ。

** 3. 1111本体のダウンロード
※ダウンロード先は''SSD推奨''。HDDだと起動時間やモデルの切り替え時間が非常に長くなるので注意
（空き容量が心配ならSettings > Paths for savingから生成画像の保存先を別ドライブにするなども可）

以下の手段から好きなものを選んでWebUIのデータをダウンロードしてきます。
��WebUIをZIPでダウンロードする：お試しで環境を構築したい人向け
��Github Desktopをインストールする：アプデを行いながら使っていきたい人向け：&#128304;おすすめ!
��Gitを使う：アプデしたり差分を確認したりバージョンを戻したりとなんでもしたい人向け

***��WebUIをZIPでダウンロードする場合
GithubリポジトリからZipでダウンロードするかんたんな方法。アプデとかめんどくさいし、バージョン戻しもできないのでお試し環境構築用として推奨。
+ 以下のURLアクセス ~~ AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI - https://github.com/AUTOMATIC1111/stable-diffusion-webui
+ Code <> →Download ZIP　でダウンロードします
+ 好きなところに配置
+ 完了

***��Github Desktopをインストールする場合：&#128304;おすすめ!
グラフィックインタフェースで操作できるGitです。
黒い画面をみなくてすみます。アプデが簡単にできる環境が作れるけど、バージョン戻しには別途Gitをインストールする必要があります。

+ Github Desktopをインストールする
+ File　→　Clone Repository
+ タブ「URL」に設定後、以下を記載~~
=|BOX|
https://github.com/AUTOMATIC1111/stable-diffusion-webui
||=
+ Local Pathに配置したい場所を記載してCloneを押す
+ 完了

&ref(https://image01.seesaawiki.jp/n/h/nai_ch/A2FTwb_lRZ.jpg,450)

***��Gitを使う場合
なんでもできる。さいつよ。

1. エクスプローラーとかでインストールしたいディレクトリを開く
2. 任意の場所を右クリックし、「Git Bash here」を選択します
3. 黒い画面が出たらディレクトリのパスが表示されていることを確認します
4. 次のコマンドを打ちリポジトリをダウンロードします
=|BOX|
git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui
||=

**4：モデルのダウンロードと配置

- ここで検索する
-- https://huggingface.co/models
- モデルについては[[Models]]ページに詳しく書いてある。
- [[スレ民共有モデル]]が質もいいのでおすすめ。
- ダウンロードしたファイルは以下のディレクトリに配置する
-- stable-diffusion-webui/models/Stable-diffusion

**5：VAEのダウンロードと配置(任意だけど推奨)

- VAEがないと色が薄くなったりするので補正するために使う
- [[ローカルのリソース]]に、Anything-v3.0と、それ以外のVAE一覧がある
-- 拡張子を.vae.ptに変える
- 配置方法は2通り
-- stable-diffusion-webui/models/Stable-diffusion に、モデル名と同名で配置して「Automatic」で適用する
-- stable-diffusion-webui/models/models/VAE に配置して、ファイル名を選択して適用する
- 設定の場所は、Settingsタブの[Stable Diffusion]-[SD VAE]

**6：NovelAI(ハローアスカには使うけど必須ではない)
[+]
**4：NovelAIモデルのダウンロード
''情報提供、テスト、研究の自由のために掲載します。''
結果が気に入ったら、[[サブスクリプションを検討してください>https://novelai.net/register]]

次のマグネットリンクからモデルをダウンロードします。
トレントクライアント(qTorrent, Bitcomet等)がない場合はインストールしておきます。
=|BOX|
magnet:?xt=urn:btih:5bde442da86265b670a3e5ea3163afad2c6f8ecc
||=

モデルの総容量は50GB超ですが、必要なデータは5GBほどです。
/stableckptのみを選択し、その他は選択解除します。
※オプション：.ptの拡張子をもつHyperNetwork用のmoduleが/modulesにあるので任意でダウンロードします。

**5：リネーム
ダウンロードしたモデルを次のようにリネームします
stableckpt\animevae.pt >> nai.vae.pt
stableckpt\animefull-final-pruned\config.yaml >> nai.yaml
stableckpt\animefull-final-pruned\model.ckpt >> nai.ckpt

2022/11/22追記
いつごろからかvaeの読み込ませ方が変更になっている。
拡張子はptでファイル名どうでもいいので、models/vaeの下にファイルを格納し、
WEB UIを起動後、Settingタブ、[Stable Diffusion]-[SD VAE]の項目で
先ほど格納したファイルを選択、Apply Settingボタンを押す。

**6：配置
以下のディレクトリにモデルを配置します。
/stable-diffusion-webui/models/Stable-diffusion
[END]

**7.起動確認

ここまでの手順がうまくいってれば起動するはず。

''「webui-user.bat」をダブルクリックでWebUIを起動させます。''
図：これね
&ref(https://image02.seesaawiki.jp/n/h/nai_ch/y4M3qrylYT.jpg)

webui-user.batを実行するとコマンドプロンプトのWindowが開き、モデルデータや色々な必要モジュールの読み込み状況が文字で表示される。
初回起動時は様々なプログラムのセットアップ作業が行われるのでしばらく待つ。
&color(#ff0000){結構時間かかるんで気長に待ちましょう}
&ref(https://image02.seesaawiki.jp/n/h/nai_ch/yiFEf9KQqg.png)
Running on local URL: http://127.0.0.1:7860
と表示されたら、インターネットブラウザ（Chrome,Edge,Firefox等）のアドレス欄にhttp://127.0.0.1:7860と打ち込む。
WEBUIの操作画面が表示されたらここまでの手順は成功。おつかれさまでした。

**8(※オプション)：環境設定
[[ローカルのwebui-user.bat]]に移動しました。

* 簡易インストール
**公式のやつ
-https://github.com/AUTOMATIC1111/stable-diffusion-webui/releases/tag/v1.0.0-pre
--もうこいつ一人でいいんじゃないかな？
--…と言いたいところやけどまだプレリリースやからかほんの少しごみが残ったりちょっと安定しないとの報告もある。
--とはいえ基本難しいこと考えずにインストールしたいならこれを使うのが最初になるんちゃうかな？
--おおむね後者のあかちゃんインストーラーとやっとることも同じみたいやで？
--後述のスタンドアローンの作者も『自身の方法とほぼ同じ』と発言していたので利用者はこっちに乗り換えて大丈夫かも

** あかちゃんインストーラー

うまくいけば一発でインストールできる。

- https://raw.githubusercontent.com/aka7774/elemental_code/main/tools/install_1111.bat
- リンクを右クリックでインストールしたいフォルダに保存して実行
-- C:\SD みたいな短くて英語でスペースのないとこがおすすめ
- あとは待つだけ
-- ブラウザも勝手に立ち上がるようにしました
- &color(#ff0000){2回目からは start.bat を起動}
- 環境を汚さないのでいくつでも入れられる（※キャッシュなどはシステムドライブに残る）
-通常の手順途中までやってPythonもGITも入ったけど上手くいかなかったのでこっち使ったけどやっぱり動かんンゴ…って時には下記の行を消してstart.bat動かすと動くかも、しらんけど
=|BOX|
echo set PATH=%%PATH%%;%INSTALL_DIR%python310\Scripts;%INSTALL_DIR%PortableGit\bin
echo set PYTHON=%INSTALL_DIR%python310\python.exe
echo set GIT=%GIT%.exe
echo set VENV_DIR=
||=

*** モデルのインストール

+ 「Filer」「Checkpoints」「Download」タブを順に開いていく
+ ダウンロードしたいモデルのURLを入力
+ 「Download to Active Dir」ボタンを押す
** スタンドアローンセットアップ法・改

https://note.com/uunin/n/n715256399038

スレでもたまに紹介されている。Pythonやgitのインストール作業無しでセットアップするのでWindows環境を汚さずに導入出来るのがウリ。わりと初心者向け(？)の解説付き。
セットアップに関してのトラブルはwikiでは対応できないので、noteのコメントで相談しましょう。

** A1111 WebUI Easy Installer and Launcher

https://github.com/EmpireMediaScience/A1111-Web-UI-Installer

CG板で使ってみた人がいいかもって言ってた。
スレでも技術部でも誰も試してないので副作用とかは不明。
一般論としては既にインストール済みのPythonやGitがあるとエラーの原因になりうる。
ほかの方法でダメだったら試してみるのも手なのかも。
使ってみた人いたら感想書いてね。

* トラブルシューティング
**RTX4090で画像生成した際、速度が遅い問題を解決する
・Stable Diffusion外の設定
Windowsの設定→グラフィックからGPUスケジューリングをオフ
ブラウザ等のハードウェアアクセラレートをオフ
　→discordもハードウェアアクセラレート設定があるので、必要であればオフ
NVIDIAコントロールパネルの3D設定の管理から電源設定をパフォーマンス優先に変更
　→電源消費が気になるならPythonだけ変更すればよい

*** launch.pyを編集し、torch・xformersのバージョンを上げる方法
2023/01/23の更新で本体に取り込まれた
[+]旧情報
[+]
https://github.com/AUTOMATIC1111/stable-diffusion-webui/issues/2449#issuecomment-1382123974

1:git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git
でWEBUIをインストール

2:launch.pyを以下のように編集する
176行目
>torch_command = os.environ.get('TORCH_COMMAND', "pip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cu117")~~
184行目
>xformers_windows_package = os.environ.get('XFORMERS_WINDOWS_PACKAGE', 'https://github.com/C43H66N12O12S2/stable-diffusion-webui/releases/download/torch13/xformers-0.0.14.dev0-cp310-cp310-win_amd64.whl')~~

3:webui-user.batを実行（VENVフォルダ以下が生成される）

4:nVidiaのサイトからCUDNN 8.7をダウンロードする
https://developer.download.nvidia.com/compute/redist/cudnn/v8.7.0/local_installers/11.8/cudnn-windows-x86_64-8.7.0.84_cuda11-archive.zip
ZIPファイルを解凍し、/bin にあるdllファイルを "stable-diffusion-main\venv\Lib\site-packages\torch\lib"に上書きコピー　

5:web-user.bat を編集して、COMMANDLINE_ARGSに　--xformers を追加

6:ENJOY!!

※RTX3060勢なんだが上記の手法で若干速度向上した。
旧情報の手作業でxformersのバージョンを上げたりビルドする手法だと各種モジュール間バージョン依存の関係でハマることがあるので新手法おすすめ
※launch.pyのファイル不一致でgit pullできなくなったりした時は、launch.pyをリネームもしくは削除してからgit pull

旧情報
[+]
・xformersの対応しているtorchバージョンを確認
結局xformersが動く動かないの差は大きいので、これがちゃんと動作する環境を作る
下記githubで最新バージョンのwhlファイル名を確認
　https://github.com/C43H66N12O12S2/stable-diffusion-webui/releases
たとえば
　xformers-0.0.14.dev0-cp310-cp310-win_amd64.whl
なら、cp310の記載があるため、Pyhon3.10に対応している
かつ、タグ名がtorch13なので、torch1.3に最適化されている
（torchはズレてても動きそう）

・パッケージ更新
1. venvに入る
Stable Diffusionが起動しているなら落とす
コマンドプロンプトを起動し、stable-diffusion-webuiと同階層まで移動
下記コマンドを実行
　stable-diffusion-webui\venv\Scripts\activate

2. パッケージを確認
下記コマンドを実行
　pip list
コマンドの結果、torchが1.13ならパッケージ更新は不要
　e.g) torch                   1.13.1+cu116

3. パッケージ更新
セットアップツールをアップデート
　python -m pip install --upgrade pip setuptools
torchインストール
　pip3 install torch==1.13.1+cu116 torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu116
別バージョンがあってもアンインストール→インストールしてくれるので気にしない

4. 起動確認
試しにStable Diffusionを起動してみる
xformersでエラーが出た場合、手動でインストールする
確認したgithubからwhlを落としてきてカレントに配置
下記コマンドを実行
　pip install xformers-0.0.14.dev0-cp310-cp310-win_amd64.whl

5. ライブラリ更新
Stable Diffusionを落とす
cuDNNをダウンロード
　https://developer.download.nvidia.com/compute/redist/cudnn/v8.7.0/local_installers/11.8/
githubでは8.6でやってる人がいたので、気になるなら8.6を落とす
階層を上がっていけば別バージョンがある
ダウンロードしたファイルのbinフォルダ内にあるファイルをtorch\libに上書き
　stable-diffusion-webui\venv\Lib\site-packages\torch\lib

6. webui-user.bat編集
下記内容に書き換え
　set COMMANDLINE_ARGS=--xformers --opt-channelslast
githubでは下記オプションも人気の模様
　--force-enable-xformers
ちゃんと動く環境があるならつけてもつけなくても一緒
つけてエラーが出るならxformersが動く環境が出来ていないとわかるので、
つけるほうが人気があるんじゃないかな

7. パフォーマンスチェック
アスカテストを実施
ここ↓を見る
Time taken: 3.05s Torch active/reserved: 2518/2684 MiB, Sys VRAM: 5358/24564 MiB (21.81%)

参考
[[RTX 4090 performance &#183; Issue #2449 &#183; AUTOMATIC1111/stable-diffusion-webui &#183; GitHub>>https://github.com/AUTOMATIC1111/stable-diffusion-webui/issues/2449]]
// ** RTX 4090などが遅い
// 　※注※　RTX4090はローカルNAIデフォ環境では速度出てません
// 　webuiのvenv内に入ってから(stable-diffusion-webui\venv\Scripts\activateで入れる)
// pip install -U -I --no-deps torch==1.12.1+cu116 --extra-index-url ttps://download.pytorch.org/whl/cu116
// ttps://pomf2.lain.la/f/5u34v576.7z
// ↑のファイルをstable-diffusion-webui\venv\Lib\site-packages\torch\lib
// にコピペ
// pip install -U -I --no-deps torchvision==0.13.1+cu116 --extra-index-url ttps://download.pytorch.org/whl/cu116
// (続き)
// 　起動オプションに追加　--xformers --opt-channelslast
// これで18it/sぐらい出るようになった
// Windows ディスプレイ設定→グラフィックの設定→GPUアクセラレータによるGPUスケジューリングをOFFで再起動する
// これで24it/s出るようになった
[END]
[END]
[END]

**gtx16xxで必要な設定
　gtx16xxでは半精度浮動小数点数が扱えないためそのままでは黒や緑の絵しかでない。オプション追加が必要。また、メモリがやや少なめ用設定も追加要
  webui-user.batに
=|BOX|
COMMANDLINE_ARGS=--precision full --no-half --no-half-vae --medvram
||=
　を加える
**その他本家のトラブルシューティングの訳(機械翻訳)
- フォルダーのパスにスペースがないことを確認する
- フラグを使用しようとしたときに launch.py&#8203;&#8203; エラー、認識されない引数が発生した場合は、webui-user.bat で完全な相対パスを使用してみてください。
例：--ckptCOMMANDLINE_ARGS= --ckpt ./models/Stable-diffusion/nai.ckpt
- 「私はgitで更新するためにPullして、何かが壊れた!」当然のことながら、多くの新機能が導入されているため、不安定になる可能性があります。[[手順に従って以前のビルドに戻します>https://rentry.org/git_retard]]。
- インストール中に&#160;winerror&#160;が発生する場合、または何かを壊して最初から再インストールしたい場合は、次のディレクトリを削除して、もう一度やり直してください。`venvrepositories`
- Pythonがエラーとして見つからない場合は、webui-user.batでPATHを手動で設定する必要があります。
　　1. python.exeのパスをShift+右クリックでコピー
　　2. webui-user.batを編集→　PYTHON= にコピーしたパスを追加します。※(""は保持)
- (img2img)RuntimeError:テンソルのサイズが一致しなければならない場合、入力画像の解像度を変更する必要があります
- 実行できる最新の[CUDAツールキット](https://developer.nvidia.com/cuda-11.3.0-download-archive?target_os=Windows&target_arch=x86_64)とGPUドライバがあることを確認してください
- トーチがGPUを使用できない場合は、代わりに[Python 3.7](https://www.python.org/downloads/release/python-370/)をダウンロードする必要があります
- 起動時に 'Git'がコマンドとして認識されない場合は、次の操作を行います:launch.py 編集で始まるすべての行を削除して保存します`git_clone`
- あなたのバージョンのPythonがPATHにない場合(または別のバージョンがPATHにある場合)、[webui.settings.bat](http://webui.settings.bat/)フォルダに行セットPYTHON=pythonを追加して、Python実行可能ファイルへのフルパスを言います:Pythonではこれを行うことができますが、gitの場合はできません。`/stable-diffusion-webuiset PYTHON=B:\soft\Python310\python.exe`
- インストーラはPython仮想環境を作成するので、インストール前にインストールされていたモジュールがあれば、インストールされたモジュールはシステムインストールには影響しません。
- 仮想環境の作成を防ぎ、システムのPythonを使用するには、webuiを編集し.bat setを`VENV_DIR=venvset VENV_DIR=`
- webui.bat は、Python 3.10.6 と特に互換性のあるモジュールのバージョンをリストするファイル から要件をインストールします。別のバージョンのPython用にインストールすることを選択した場合は、webuiを編集すると、.bat=REQS_FILEを設定する代わりに.txt=要件を設定することが役立つかもしREQS_FILEません(ただし、推奨バージョンのPythonを使用することをお勧めしますrequirements_versions.txt)。`requirements_versions.txt`
- 生成された画像の代わりに緑/黒の出力を取得する場合は、半精度浮動小数点数をサポートしていないカードがあります(16xxカードの既知の問題):edit webui-user.bat -追加したい他のフラグと一緒に6行目を変更する.vaeファイルを使用している場合は、残念ながら、モデルはVRAMではるかに多くのスペースを占有しますしたがって、それ`COMMANDLINE_ARGS=--precision full --no-half-no-half-vae-medvram`
- あなたの出力がごちゃごちゃした虹の混乱である場合、あなたのイメージの解像度は低すぎます
- CFGレベルが高すぎると色の歪みも発生し、CFGは5〜15
- 古いシステムでは、次のように変更する必要があります。`cudatoolkit=11.3cudatoolkit=9.0`
- インストールが C: ドライブにあることを確認します。
- このガイドは、安定した拡散には cuda コアが必要なため、NVIDIA GPU&#160;*専用*に設計されています。AMDユーザーは[このガイド](https://rentry.org/ayymd-stable-diffustion-v1_4-guide)をお試しください

* Tips

- WebUI 内でダウンロードした .ckpt ファイルをすばやく切り替えることができます。
- ベースSDとは異なり、NovelAIは歪みなく最大**768x768**の画像をネイティブに生成できます
- それ以外の場合、SDで512x512よりも大幅に大きい画像を生成する場合は、最良の結果を得るため必ずチェックしてください&#160;Highres, fix&#160;。そうしないと、「複製」歪みが現れ始める可能性があります (複数の顔、腕など)。ノイズ除去強度：denoising strengthを下げると最適に機能するようです (私は 0.5 を使用しました)
- 利用可能な修正があっても、NovelAI以外のモデルは512x画像でトレーニングされているため、最も正確な結果を得るために512x512で生成することをお勧めします
- ワイフモデルと通常の.ckptには独自の長所と短所があります。waifu .ckptで行われたアニメ以外のプロンプはアニメのスタイル化に偏り、別のモデルとマージしない限り、現実的な顔や人々をより困難にします
- トレーニング時に引数や**引数を使用しないでください**!結果は非常に劣るでしょう`-medvram-lowvram`
- nai.yaml は、NovelAI の結果で 1:1 を達成するために必要ではないかもしれません。
- キーワードの周囲に( )を使用して強度を高め、[ ] を使用して強度を下げます。
- 他のサンプラーとは異なり、k_euler_aは低ステップから高品質の結果を生成することができます。
- プロンプトを**スタイルとして保存**を使用すると、プロンプトを簡単に選択可能な出力として保存できます。最初のスタイルを保存すると、Rollの左側に選択するボックスが表示され、選択することができます。プロンプトはアクセスすることで削除できます(これは、本当に良い画像を生成し、さまざまな被写体で繰り返し使用したい組み合わせを見つけた場合に便利です)。`styles.csv`
- 右側の出力タブからimg2imgにお気に入りの結果をドラッグ**して、**さらに反復することができます
- **k_euler_a**と**k_dpm_2_a**のサンプラーは、同じシード&プロンプトから大きく異なる、より複雑な結果をもたらしますが、それらの結果はステップ全体で一貫していません。他のサンプラーは、より多くのステップでより予測可能な線形改良を提供します
- 生成された各結果のシードは、再訪する場合に出力ファイル名にあります
- img2imgで生成された画像と同じキーワードを使用すると、興味深いバリアントが生成されます
- プロンプトは*1*次元で少なくとも512ピクセル、または絶対最小の384x384正方形にすることをお勧めします。
- CLIP インテロゲーターは多くのスペース (8 GB) を占有します。頻繁に使用する予定がない場合は選択しないでください。
- 興味深い出力のためにimg2imgで低強度(0.3-0.4)+高CFGを試してみてください
- プロンプトで日本語の Unicode 文字を使用できます。

**UIの日本語化
+画面上部メニューの「Extension」タブをクリック
+Installed,Avaliable,Install from URLと書かれた中の「Avaliable」をクリック
+「localization」の左側のチェックマークをクリック（チェックを外す）
+「Load from:」ボタンをクリックしてしばらく待つ
+表示されたExtensionリストの中から「ja_JP Localization」を探して、右側にあるInstallボタンをクリック
+画面上部メニューの「Settings」タブをクリック
+画面左のメニューの中から「User Interface」を探してクリック
+画面右側に表示された各種設定の下の方にある「Localization (requires restart)」の「None」の所をクリックして「ja_JP」にする。
+画面上の方にある「Apply settings」を押す。
+1 settings changed: localization.　と表示が出たら画面上の方にある「Reload UI」を押す。


* バージョンを戻す方法
アプデしておかしなっても大丈夫やで

** git checkoutを使う方法
参考：(英文)：Git revert guide - [[https://rentry.org/git_retard]]

** クリーンインストール
+ リソースのダウンロードとかは省いて導入ガイドにそってWebUIを再インストールする。~~ ※フォルダは「StableDiffusion_WebUI_v2」とか名前つけて新しく作ってリポジトリをクローンするんやで
+ もとのディレクトリ*に置いてあった.ckptやvae,nai.yamlを同じディレクトリにコピペする ~~*場所：/stable-diffusion-webui/models/Stable-diffusion
+ 完了

* 移動する方法

SSDを増設したとかで、
C:\stable-diffusion-webui
から
D:\stable-diffusion-webui
に移動したいとする。

基本的にはフォルダごと移動して大丈夫。
PythonとGitがCドライブに残ったままならこれでいけるはず。

Pythonの置き場所も変わる場合、
D:\stable-diffusion-webui\venv\pyvenv.cfg
を開いて、homeを変える必要がある。

* 削除する方法

C:\stable-diffusion-webui
ごと削除する。

PythonとGitをインストーラーで入れた場合はアンインストーラーで消す。



















