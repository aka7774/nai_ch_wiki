- [[ローカルをクラウドで]]
- [[ローカルの学習入門]]

#contents

* 初心者向け手順

+ Googleアカウントを用意する(普段使いとは分けるのがおすすめ)
+ 次のページを読んで基礎を理解する
++ https://www.python.jp/train/experience/colab.html
++ https://www.python.jp/train/experience/exec-python1.html
+ 「1+1」のかわりに以下の黄色い枠内の内容をコピペして実行

** 注意

*** Notebookを新規作成できたら、最初に Rumtime - Change runtime type で GPU を選ぶ

[[&ref(https://image02.seesaawiki.jp/n/h/nai_ch/ruRG6Pge9t-s.jpg)>https://image02.seesaawiki.jp/n/h/nai_ch/ruRG6Pge9t.jpg]]

*** このNotebookではいくつかのExtensionが自動インストールされる

- 学習関連とマージ関連は重たいのでチェックボックスで入れるかどうか選べる

*** モデルを増やしたい時はFilerでダウンロードすることも出来る

ダウンロードしたいモデルのURLを用意しましょう(自己責任で)

[[&ref(https://image02.seesaawiki.jp/n/h/nai_ch/BpmoNSigEj-s.png)>https://image02.seesaawiki.jp/n/h/nai_ch/BpmoNSigEj.png]]

*** Google Driveのマウントはしなくても動かせるのでお好みで

- マウントしないと全部消えるので後腐れが無い
- マウントするとデータの保存が楽になる

* 入門用Notebook

=|BOX|
#@markdown 実行は自己責任で。

#@markdown 最初に Rumtime - Change runtime type で GPU を選ぶ

#@markdown gradioログイン情報(パスワード空白時は自動生成)
user = "user"#@param {type:"string"}
password = ""#@param {type:"string"}

# GPUの情報表示
!nvidia-smi
!nvcc -V

# RAMとVRAMの容量取得(GiB)
res = !free -m | grep 'Mem:' | awk '{print $2}'
if not res:
   raise ValueError("RAMが取得できない")
ram = round(float(res[0]) / 1024, 3)
res = !nvidia-smi --query-gpu=memory.total --format=csv,noheader,nounits
if not res:
   raise ValueError("VRAMが取得できない(GPUに繋がってないかも)")
vram = round(float(res[0]) / 1024, 3)
print(f"RAM : {ram}")
print(f"VRAM: {vram}")
del res

#@markdown ON: conda Python 3.9 OFF: pip Python 3.8
use_conda = True #@param {type:"boolean"}
if use_conda:
   MINICONDA_SH='Miniconda3-py39_4.12.0-Linux-x86_64.sh' # Miniconda3-latest-Linux-x86_64.sh
   !wget https://repo.anaconda.com/miniconda/{MINICONDA_SH}
   !chmod +x {MINICONDA_SH}
   !./{MINICONDA_SH} -b -f -p /usr/local
   del MINICONDA_SH
   !conda update conda -y
   !conda install pytorch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1 cudatoolkit=11.3 -c pytorch -y
   !conda install xformers -c xformers/label/dev -y
else:
   !pip install pytorch_lightning --quiet
   !pip install triton --quiet
   !pip install --upgrade --no-cache-dir gdown httplib2 --quiet
   !pip install https://github.com/camenduru/stable-diffusion-webui-colab/releases/download/0.0.15/xformers-0.0.15.dev0+189828c.d20221207-cp38-cp38-linux_x86_64.whl --quiet

# 入ったPythonのバージョン確認
!python -V

# デフォルトパスワード生成
import secrets
import string

def get_password(length: int) -> str:
    # secretsはrandomとかと違って暗号学的に安全な乱数を生成できる。
    pass_chars = string.ascii_letters + string.digits
    password = ''.join(secrets.choice(pass_chars) for i in range(length))
    return password

default_password = get_password(64)

del secrets
del string
del get_password

if not password:
    password = default_password
    del default_password

# WEBUIのセットアップ
%cd /content/
!git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git
%cd stable-diffusion-webui/models/Stable-diffusion

# ダウンロードにトークンの要らないモデルなのでコメントアウト
##@markdown トークンはここで貰ってきて https://huggingface.co/settings/tokens
#user_token = ''#@param {type:"string"}
#user_header = f"\"Authorization: Bearer {user_token}\""
#@markdown ckptのURLを入れる(自己責任)
ckpt_url1 = 'https://huggingface.co/acheong08/Anything/resolve/main/Anything-V3.0-pruned-fp32.ckpt'#@param {type:"string"}
ckpt_url2 = 'https://huggingface.co/cafeai/cafe-instagram-sd-1-5-v6/resolve/main/instagram-latest-plus-clip-v6e1_50000.safetensors'#@param {type:"string"}
ckpt_url3 = 'https://huggingface.co/hesw23168/SD-Elysium-Model/resolve/main/Elysium_V1.ckpt'#@param {type:"string"}
#!wget -c --header={user_header} "{ckpt_url}" -P /content/stable-diffusion-webui/models/Stable-diffusion/
if ckpt_url1:
   !wget -c "{ckpt_url1}" -P /content/stable-diffusion-webui/models/Stable-diffusion/
if ckpt_url2:
   !wget -c "{ckpt_url2}" -P /content/stable-diffusion-webui/models/Stable-diffusion/
if ckpt_url3:
   !wget -c "{ckpt_url3}" -P /content/stable-diffusion-webui/models/Stable-diffusion/
vae_url = "https://huggingface.co/acheong08/Anything/resolve/main/Anything-V3.0.vae.pt"#@param {type:"string"}
if vae_url:
   !wget -c "{vae_url}" -P /content/stable-diffusion-webui/models/Stable-diffusion/
#del user_header

# @markdown aria2cで落としたいモデルのURL
aria_url = ''#@param {type:"string"}
if aria_url:
    !apt install -y -qq aria2
    !aria2c --summary-interval=10 -x 3 --allow-overwrite=true -Z {aria_url}

#@markdown Extensionsのセットアップ
%cd /content/stable-diffusion-webui/extensions/
#@markdown 学習関連
use_train = True #@param {type:"boolean"}
if use_train:
   !git clone https://github.com/d8ahazard/sd_dreambooth_extension.git
   !git clone https://github.com/aria1th/Hypernetwork-MonkeyPatch-Extension.git
   !git clone https://github.com/aka7774/sd_katanuki.git
#@markdown マージ関連
use_merge = True #@param {type:"boolean"}
if use_merge:
   !git clone https://github.com/bbc-mc/sdweb-merge-board.git
   !git clone https://github.com/bbc-mc/sdweb-merge-block-weighted-gui.git
   !git clone https://github.com/aka7774/sd_merge_numa.git
!git clone https://github.com/animerl/novelai-2-local-prompt.git
!git clone https://github.com/yfszzx/stable-diffusion-webui-images-browser.git
!git clone https://github.com/aka7774/sd_fake_xyplot.git
!git clone https://github.com/aka7774/sd_curly_rand.git
!git clone https://github.com/aka7774/sd_filer.git
!git clone https://github.com/aka7774/sd_infotexts.git
!git clone https://github.com/aka7774/sd_about.git
!git clone https://github.com/kousw/stable-diffusion-webui-daam.git
!echo '{"backup_dir":"/content/drive/MyDrive/sd"}' > /content/stable-diffusion-webui/extensions/sd_filer/json/config.json

# 一度起動して必要なものをインストールする
%cd /content/stable-diffusion-webui/
!COMMANDLINE_ARGS="--exit" REQS_FILE="requirements.txt" python launch.py

# large_model > 7GB
#!sed -i "s/'cpu'/devices.get_optimal_device()/g" modules/extras.py
# --lowvram

#@markdown Google Driveのマウント
use_drive = True #@param {type:"boolean"}
if use_drive:
   from google.colab import drive
   drive.mount('/content/drive')

# WEBUIの起動
!COMMANDLINE_ARGS="--xformers --opt-channelslast --share --gradio-auth {user}:{password}" REQS_FILE="requirements.txt" python launch.py
# --enable-insecure-extension-access

||=

** 更新について

需要ありそうな変更は手が空いたらするけど、個別のトラブルには対応できないので、
動かなかったり、機能に不満があったら、いろんな人のNotebookを探しに行くと良いでしょう。

** 更新履歴

*** 2022-12-20

- condaかpipか選べるようにした。エラー出た時の予備になるかも？
- 階層マージ遊びが出来るExtensionをインストールできるようにした(たぶん4GBのモデルならいける)
- モデルのURLを3つまで入れられるようにした(もっと入れたければ改造して)
- SD2.0系は未対応(需要あれば対応する)

** バックアップ

- https://gist.github.com/aka7774/1a52a5dcaf57a5cdbcf65562552bb04e
